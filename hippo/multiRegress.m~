function [err,W,sp,spHat] = multiRegress(X,sp,pos,file)%,dec)
% linear regression from wavelet-transformed LFP to spike trains
% only uses timepoints when rat is running at the moment...

sp = 
lambdas = [0 4.^(-8:4)];
numCross = 2;
dec = round(size(X,2)/size(pos,1));
Fs = floor(log2(1250/32*dec/2)*2)/2;
levels = 1:.5:9;
levels(levels > Fs) = [];
if size(pos,1) > size(X,2)
    pos = pos(1:size(X,2),:);
end
[~,~,~,~,~,b] = fixPos(pos);
b = bwmorph(b~=0,'dilate',round(1250/32));
b = resample(double(b),dec,1) > .5;
trial = bwlabel(b);clear b;
test = ceil(rand(1,max(trial))*numCross);
Xcov = zeros(numCross,2*numel(levels)*size(X,1),2*numel(levels)*size(X,1),'single'); 
yX = zeros(numCross,size(sp,1),2*numel(levels)*size(X,1),'single');
for i = 1:max(trial)
   Xtemp = zeros(numel(levels)*size(X,1),sum(trial == i), 'single');
   for j = 1:numel(levels)
       Xtemp((j-1)*size(X,1)+(1:size(X,1)),:) = morFilter(single(X(:,trial == i)),2^(levels(j)),1250/32*dec);
   end
   inds = 1:sum(trial == i);%trial == i;%fast(trial == i)'; %% alternate inds = trial == i;
   Xtemp = [real(Xtemp);imag(Xtemp)];
   Xcov(test(i),:,:) = squeeze(Xcov(test(i),:,:)) + Xtemp(:,inds)*Xtemp(:,inds)';
   yX(test(i),:,:) = squeeze(yX(test(i),:,:)) + sp(:,trial == i)*Xtemp(:,inds)';
   fprintf('.');
end

for i = numCross:-1:1
    for j = numel(lambdas):-1:1
        W(i,j,:,:) = squeeze(sum(yX(i ~= 1:numCross,:,:),1))/(squeeze(sum(Xcov(i~=1:numCross,:,:),1)) + ...
            diag(diag(squeeze(sum(Xcov(i~=1:numCross,:,:),1))))*lambdas(j));
    end
end
        
err = zeros(numel(lambdas),numCross,size(sp,1));
cum = zeros(numCross,size(sp,1));
for i = 1:max(trial)
   Xtemp = zeros(numel(levels)*size(X,1),sum(trial == i), 'single');
   for j = 1:numel(levels)
       Xtemp((j-1)*size(X,1)+(1:size(X,1)),:) = morFilter(single(X(:,trial == i)),2^(levels(j)),1250/32*dec);
   end
   Xtemp = [real(Xtemp);imag(Xtemp)];
   for j = 1:numel(lambdas)
       err(j,test(i),:) = squeeze(err(j,test(i),:)) + sum((sp(:,trial == i) - squeeze(W(test(i),j,:,:))*Xtemp).^2,2);
   end
   cum(test(i),:) = cum(test(i),:) + sum(sp(:,trial == i).^2,2)';
end
err(:,:) = bsxfun(@rdivide,err(:,:),cum(:)');
err = squeeze(sum(err,2))/numCross;
clear W;
Xcov = squeeze(sum(Xcov));
yX = squeeze(sum(yX));
%sz = size(Xcov,1)/2;
for i = numel(lambdas):-1:1
    W(i,:,:) = yX/(Xcov+diag(diag(Xcov))*lambdas(i));
end
sp = sp(:,trial == i);
[~,mini] = min(err);
for i = numel(mini):-1:1
    spHat(i,:) = squeeze(W(mini(i),:,:))*Xtemp;
end
% yX = complex(yX(:,1:sz),yX(:,sz+1:end));
% Xcov = complex(Xcov(1:sz,1:sz)+Xcov(sz+1:end,sz+1:end),Xcov(sz+1:end,1:sz)-Xcov(1:sz,sz+1:end));
% for i = numel(lambdas):-1:1
%     WC(i,:,:) = yX/(Xcov + diag(diag(real(Xcov)))*lambdas(i));
% end

if exist('file','var')
    save([file 'multiRegress.mat'],'err','W','sp','spHat');
end

%
%XcovC = complex(Xcov(1:sz,1:sz)+Xcov(sz+1:end,sz+1:end),Xcov(sz+1:end,1:sz)-Xcov(1:sz,sz+1:end));