function [A, noise, R] = fitDists2(fileNum,modelSize,numInds)
sub = 1;fs = 1000/sub;
load_data;
spikes = spktrain;
v = signals;
if ~exist('numInds','var');
    numInds = size(v,2);
end
spikes = [spikes; zeros(size(v,1)-size(spikes,1),size(spikes,2))];
%%FOR DECIMATION
%for i = 1:numInds
%    v1(:,i) = decimate(v(:,i),sub);
%    spikes1(:,i) = hist(find(spikes(:,i)),[1:sub:numel(spikes(:,i))]);
%end
%spikes = spikes1;v = v1;
spikes = logical(spikes(:,1:numInds));
cMor = getMor(fm,sf,fs,5);z = v;
for i= 1:numInds
    z(:,i) = conv(v(:,i),cMor,'same');
end
%%%%%%%%%%%%
times = round(400/sub);
temp = zeros(modelSize,sum(spikes(:)));
for i = 1:size(temp,1)
    temp(i,:) = z(find(spikes)-i+1);
end
spikeFit.Sigma = cov(temp');%spikeFit.Sigma
spikeFit.mu = mean(temp,2);
spikeTimes = getTimes1(spikes)'+1;
z = z.'; z = z(1:size(spikeTimes,1),:);
R = spikeFit.Sigma;
for j = 1:modelSize
    coeffs = [];noise = [];
    for i = 1:numInds
        [coeffs(i,:) noise(i)] = arburg(z(i,:),j);
    end
    coeffs(end+1,:) = mean(coeffs);noise(end+1) = mean(noise);
    A = [-coeffs(end,2:end);eye(numel(coeffs(end,:))-1)];A(end,:) = [];
    vT(j,:) = simVar(A,noise(end),R(1:j,1:j));
end
[h0, xs, isiAll] = histISI(spikes,times);h0 = h0/sum(h0);% isiAll msIsi

figure;hold all;
[zc , ~] = covAllZ(spikeTimes,z,times);
plot(zc,'LineWidth',3);
%plot(vT','LineWidth',3);
plot(vT(1,:),'c','linewidth',3);plot(vT(2,:),'g','linewidth',3);plot(vT(3,:),'r','linewidth',3);
axis tight;legend({'Empirical','AR(1)','AR(2)','AR(3)'},'Location','NorthWest');legend boxoff;
set(gca,'fontsize',16);ylabel('Variance');
xlabel('Time after spike (ms)');
vT = vT(end,:)';
set(gca,'xlim',[1 times],'ylim',[min(vT)-.02 max(vT)+.02]);
ms = simMean(A,spikeFit.mu);
%vsIsi = vT(isiAll);
%klIsi = klDiv1(msIsi,vsIsi,spikeFit.mu,spikeFit.Sigma);

figure;hIm(:,:,1) = ones(2,times);hIm(:,:,2) = ones(2,1)*(1-h0(1:times)/max(h0));
hIm(:,:,3) = hIm(:,:,2);hIm = circshift(hIm,[0 0 1]);
imagesc([0 times-1],[0 10],hIm);
hold all;
set(gca,'YDir','normal')
k1 = klDiv1(ms,vT,spikeFit.mu,spikeFit.Sigma,times);
%plot(klDiv1(zm,zc,spikeFit.mu,spikeFit.Sigma,times),'Linewidth',2);
c = covIsi(spikes,z,max(xs)+1);
k = klDiv1(nanmean(c),nanvar(c),spikeFit.mu,spikeFit.Sigma,max(xs)+1);
plot(0:times-1,k(1:times),'Linewidth',2);%scatter(1:times,k(1:times),max(.1,h0(1:times)/max(h0)*300),'filled');%
plot(0:times-1,k1,'r','Linewidth',2);
scatter(nansum(h0.*xs),nansum(h0.*k),100,'r','filled');
%scatter(mean(isiAll),nanmean(k(isiAll+1)),100,'r','filled');
s
plot([0 times],[.83 .83],'k--','Linewidth',2);
set(gca,'xlim',[0 140],'ylim',[0 14]);set(gca,'fontsize',16);
ylabel('Information (bits)');xlabel('Time since last spike (ms)');
%ks = k(isiAll+1);
%figure;scatterhist(isiAll(~isnan(ks)),ks(~isnan(ks)));
%figure;hist(isiAll,0:2:times);
%set(gca,'xlim',[0 times]);
%figure;hist(k(isiAll+1),0:.3:15);
%set(gca,'xlim',[0 15]);

function d = klDiv1(m0,s0,m1,s1,ts)
if ~exist('ts','var')
    ts = numel(m0);
end
m0 = m0(1:ts);s0 = s0(1:ts);
m1 = m1(1);s1 = s1(1);
d = (s1./s0 + conj(m1-m0).*(m1-m0)./s0 - log(s1./s0) - 1)/log(2);

function c = covIsi(spikes,z,lags)
c = nan*ones(sum(spikes(:))-size(spikes,2),lags);
%c1 = nan*ones(sum(spikes(:))-size(spikes,2),ceil(lags/dec));
counter = 1;
for i = 1:size(spikes,2)
    f = find(spikes(:,i));
    for j = 2:numel(f)
        c(counter,1:min(f(j)-f(j-1),lags)) = z(i,f(j-1):min(lags+f(j-1),f(j))-1);
%         if f(j)-f(j-1) <= lags
%             c1(counter,ceil((f(j)-f(j-1))/dec)) = z(i,f(j));
%         end
%     if size(z,2)>=(f(j-1)+lags)
%         c(counter,:) = z(i,f(j-1)+(1:lags));
%     end
    counter = counter+1;
    end
end
%c = nanvar(c);

function [h xs fAll] = histISI(spikes,times)
xs = 0:3*times;
h = zeros(size(xs));
fAll = [];%muAll = [];
for i = 1:size(spikes,2)
    f = find(spikes(:,i));
%    muAll = [muAll z(i,f(2:end))];
    f = diff(f);
    fAll = [fAll f'];
    h = hist(f,xs) + h;
end

function mu = simMean(A,M)
numIt = 2000;
mu = zeros(numIt,1);
for i = 1:numIt
    mu(i) = M(1);
    M = A*M;
end

function [v P] = simVar(A,noise,R)
p = size(A,1);
E = zeros(p); E(1,1) = noise;
P = R;
numIt = 2000;
v = zeros(numIt,1);
for i = 1:numIt
    v(i) = P(1,1);
    P = A*P*A' + E;
    P = (P+P')/2;
end
vecP = (eye(p^2,p^2) - kron(conj(A),A))\E(:);
P = reshape(vecP,p,p);
P = (P+P')/2;
[P(1,1) log(max(v)) log(real(P(1,1)))];

function [zc zm] = covAllZ(spikes,zs,forw)
[r c] = find(spikes == 1);
r((c+forw-1) > size(spikes,2)) = [];
c((c+forw-1) > size(spikes,2)) = [];
z = zeros(numel(r),forw);
for i = 1:numel(r)
    z(i,:) = zs(r(i),c(i)+(1:forw)-1);
end
zc = var(z);
zm = mean(z);

function t = getTimes1(spikes)
spikes = spikes';
s = size(spikes);
t = zeros(size(spikes));
for i = 1:s(1)
    counter = 1001;
    for j= 1:s(2)
        if spikes(i,j)
            counter = 0;
        else
            counter = counter + 1;
        end
        t(i,j) = counter;
    end
end
t(t > 1000) = 500;
t = t';